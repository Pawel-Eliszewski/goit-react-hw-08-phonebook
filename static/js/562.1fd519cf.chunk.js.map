{"version":3,"file":"static/js/562.1fd519cf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactsBar/ContactsBar.module.css?8aab","components/ContactsBar/ContactsBar.jsx","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","utils/notifications.js","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsBar_wrapper__ka5vc\"};","import css from './ContactsBar.module.css';\n\nexport const ContactsBar = () => {\n  return (\n    <div className={css.wrapper}>\n      <h2>Add contact</h2>\n      <h1>Contacts list</h1>\n      <h2>Find contact</h2>\n    </div>\n  );\n};\n","export const selectContacts = state => state.contacts.list;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsForm_container__VaqHs\",\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"btn\":\"ContactsForm_btn__qImoL\",\"icon\":\"ContactsForm_icon__zT4Jt\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nameAlreadyInContacts } from 'utils/notifications';\nimport css from './ContactsForm.module.css';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (!contacts.map(contact => contact.name).includes(name)) {\n      dispatch(addContact({ name, number }));\n    } else {\n      nameAlreadyInContacts(name);\n    }\n    form.reset();\n  };\n\n  return (\n    <div className={css.container}>\n      <form type=\"submit\" className={css.form} onSubmit={handleSubmit}>\n        <div className={css.wrapper}>\n          <label className={css.label} htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            className={css.input}\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <label className={css.label} htmlFor=\"phone\">\n            Number\n          </label>\n          <input\n            className={css.input}\n            id=\"phone\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Enter phone number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        <button type=\"submit\" className={css.btn}>\n          <img\n            className={css.icon}\n            src={require('../../images/addContactIconRed.png')}\n            alt=\"Add new contact\"\n          />\n        </button>\n      </form>\n    </div>\n  );\n};\n","import Notiflix from 'notiflix';\n\nexport const nameAlreadyInContacts = name => {\n  Notiflix.Notify.failure(`\"${name}\" is already in contacts.`);\n};\n\nexport const contactsAmount = number => {\n  if (number === 1) {\n    Notiflix.Notify.success(`You have ${number} contact in your Phonebook.`);\n  } else if (number !== 0) {\n    Notiflix.Notify.success(`You have ${number} contacts in your Phonebook.`);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsList_container__r+Txe\",\"list\":\"ContactsList_list__mmE3Y\",\"wrapper\":\"ContactsList_wrapper__zyXOO\",\"name\":\"ContactsList_name__cbzy1\",\"phone\":\"ContactsList_phone__6Fgwo\",\"btn\":\"ContactsList_btn__GccuV\",\"icon\":\"ContactsList_icon__CcQur\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectError,\n  selectContacts,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { contactsAmount } from 'utils/notifications';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    contactsAmount(contacts.length);\n  }, [contacts.length, dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLocaleUpperCase().includes(filter.trim())\n  );\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {error && <p>{error}</p>}\n        {contacts.length > 0 ? (\n          filteredContacts.map(contact => {\n            return (\n              <div className={css.wrapper} key={contact.id}>\n                <li className={css.name}>\n                  {`${contact.name}`}{' '}\n                  <dt>\n                    <a\n                      className={css.phone}\n                      href={`tel:${contact.number}`}\n                    >{`${contact.number}`}</a>\n                  </dt>\n                </li>\n                <button\n                  className={css.btn}\n                  onClick={() => handleDelete(contact.id)}\n                >\n                  <img\n                    className={css.icon}\n                    src={require('../../images/deleteIconRed.png')}\n                    alt=\"Delete contact\"\n                  />\n                </button>\n              </div>\n            );\n          })\n        ) : (\n          <h4>Your Phonebook is empty</h4>\n        )}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsFilter_container__UgMaD\",\"label\":\"ContactsFilter_label__48a3p\",\"input\":\"ContactsFilter_input__8nlWg\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './ContactsFilter.module.css';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    let value = e.currentTarget.value.toUpperCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.container}>\n      <label className={css.label} htmlFor=\"filter\">\n        Search contact by name\n      </label>\n      <input\n        onChange={handleInput}\n        className={css.input}\n        id=\"filter\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        autoComplete=\"off\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ContactsPage_main__rIWJn\"};","import { ContactsBar } from 'components/ContactsBar/ContactsBar';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\nimport css from './ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <ContactsBar />\n      <div className={css.main}>\n        <ContactsForm />\n        <ContactsList />\n        <ContactsFilter />\n      </div>\n    </>\n  );\n}\n"],"names":["ContactsBar","className","css","selectContacts","state","contacts","list","selectError","error","selectFilter","filter","ContactsForm","dispatch","useDispatch","useSelector","type","onSubmit","e","preventDefault","form","target","name","elements","value","number","map","contact","includes","Notiflix","nameAlreadyInContacts","addContact","reset","htmlFor","id","placeholder","title","required","src","require","alt","ContactsList","useEffect","fetchContacts","length","filteredContacts","toLocaleUpperCase","trim","href","onClick","deleteContact","ContactsFilter","onChange","currentTarget","toUpperCase","setFilter","autoComplete","ContactsPage"],"sourceRoot":""}