{"version":3,"file":"static/js/717.9520663f.chunk.js","mappings":"4MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EAItBC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EAEnBC,EAAe,SAAAL,GAAK,OAAIA,EAAMM,MAAV,E,mBCLjC,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAgI,0B,SCKnHC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXR,GAAWS,EAAAA,EAAAA,IAAYX,GAe7B,OACE,iCACE,uCACA,kBAAMY,KAAK,SAASC,UAAWC,EAAUC,SAhBxB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MAC/BpB,EAASsB,KAAI,SAAAC,GAAO,OAAIA,EAAQL,IAAZ,IAAkBM,SAASN,GCbnB,SAAAA,GACnCO,IAAAA,OAAAA,QAAA,WAA4BP,EAA5B,6BACD,CDcKQ,CAAsBR,GAFtBX,GAASoB,EAAAA,EAAAA,IAAW,CAAET,KAAAA,EAAMG,OAAAA,KAI9BL,EAAKY,OACN,EAKG,WACE,kBAAOjB,UAAWC,EAAWiB,QAAQ,OAArC,mBAGA,kBACElB,UAAWC,EACXkB,GAAG,OACHpB,KAAK,OACLQ,KAAK,OACLa,YAAY,aACZC,MAAM,yIACNC,UAAQ,KAEV,kBAAOtB,UAAWC,EAAWiB,QAAQ,QAArC,qBAGA,kBACElB,UAAWC,EACXkB,GAAG,QACHpB,KAAK,MACLQ,KAAK,SACLa,YAAY,qBACZC,MAAM,+FACNC,UAAQ,KAEV,mBAAQvB,KAAK,SAASC,UAAWC,EAAjC,8BAMP,E,UExDD,EAAyB,+BAAzB,EAAgE,8BAAhE,EAAsG,8BCGzFsB,EAAiB,WAC5B,IAAM3B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKG,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAWiB,QAAQ,SAArC,oCAGA,kBACEM,SAXc,SAAArB,GAClB,IAAIM,EAAQN,EAAEsB,cAAchB,MAAMiB,cAClC9B,GAAS+B,EAAAA,EAAAA,GAAUlB,GACpB,EASKT,UAAWC,EACXkB,GAAG,SACHpB,KAAK,OACLQ,KAAK,OACLa,YAAY,aACZC,MAAM,yIACNC,UAAQ,MAIf,E,UC5BD,EAAsB,0BCUTM,EAAe,WAC1B,IAAMhC,GAAWC,EAAAA,EAAAA,MACXL,GAAQM,EAAAA,EAAAA,IAAYP,GACpBF,GAAWS,EAAAA,EAAAA,IAAYX,GACvBO,GAASI,EAAAA,EAAAA,IAAYL,IAE3BoC,EAAAA,EAAAA,YAAU,WJXkB,IAAAnB,EIY1Bd,GAASkC,EAAAA,EAAAA,OJXI,KADapB,EIaXrB,EAAS0C,QJXxBjB,IAAAA,OAAAA,QAAA,mBAAoCJ,EAApC,gCACoB,IAAXA,GACTI,IAAAA,OAAAA,QAAA,mBAAoCJ,EAApC,gCIUD,GAAE,CAACrB,EAAS0C,OAAQnC,IAErB,IAAMoC,EAAmB3C,EAASK,QAAO,SAAAkB,GAAO,OAC9CA,EAAQL,KAAK0B,oBAAoBpB,SAASnB,EAAOwC,OADH,IAMhD,OACE,2BACE,qCACC1C,IAAS,uBAAIA,IACbH,EAAS0C,OAAS,EACjBC,EAAiBrB,KAAI,SAAAC,GACnB,OACE,oCACMA,EAAQL,KADd,aACuBK,EAAQF,SAC7B,mBACEV,UAAWC,EACXkC,QAAS,kBAbFhB,EAaqBP,EAAQO,GAbvBvB,GAASwC,EAAAA,EAAAA,IAAcjB,IAA7B,IAAAA,CAaE,EAFX,sBAFOP,EAAQO,GAUpB,KAED,qDAIP,EC/Cc,SAASkB,IACtB,OACE,iBAAKrC,UAAU,OAAf,WACE,SAACL,EAAD,KACA,SAAC4B,EAAD,KACA,SAACK,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","utils/notifications.js","webpack://react-homework-template/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.list;\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"btn\":\"ContactsForm_btn__qImoL\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { nameAlreadyInContacts } from 'utils/notifications';\nimport css from './ContactsForm.module.css';\n\nexport const ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (!contacts.map(contact => contact.name).includes(name)) {\n      dispatch(addContact({ name, number }));\n    } else {\n      nameAlreadyInContacts(name);\n    }\n    form.reset();\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form type=\"submit\" className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label} htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          className={css.input}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <label className={css.label} htmlFor=\"phone\">\n          Number\n        </label>\n        <input\n          className={css.input}\n          id=\"phone\"\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\" className={css.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","import Notiflix from 'notiflix';\n\nexport const nameAlreadyInContacts = name => {\n  Notiflix.Notify.failure(`\"${name}\" is already in contacts.`);\n};\n\nexport const contactsAmount = number => {\n  if (number === 1) {\n    Notiflix.Notify.success(`You have ${number} contact in your Phonebook.`);\n  } else if (number !== 0) {\n    Notiflix.Notify.success(`You have ${number} contacts in your Phonebook.`);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"ContactsFilter_filter__T8Ehl\",\"label\":\"ContactsFilter_label__48a3p\",\"input\":\"ContactsFilter_input__8nlWg\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './ContactsFilter.module.css';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    let value = e.currentTarget.value.toUpperCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        onChange={handleInput}\n        className={css.input}\n        id=\"filter\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactsList_btn__GccuV\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectError,\n  selectContacts,\n  selectFilter,\n} from 'redux/contacts/selectors';\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\nimport { contactsAmount } from 'utils/notifications';\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    contactsAmount(contacts.length);\n  }, [contacts.length, dispatch]);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLocaleUpperCase().includes(filter.trim())\n  );\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ul>\n      <h2>Contacts</h2>\n      {error && <p>{error}</p>}\n      {contacts.length > 0 ? (\n        filteredContacts.map(contact => {\n          return (\n            <li key={contact.id}>\n              {`${contact.name}: ${contact.number}`}\n              <button\n                className={css.btn}\n                onClick={() => handleDelete(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })\n      ) : (\n        <p>Your Phonebook is empty</p>\n      )}\n    </ul>\n  );\n};\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\n\nexport default function Contacts() {\n  return (\n    <div className=\"main\">\n      <ContactsForm />\n      <ContactsFilter />\n      <ContactsList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","list","selectError","error","selectFilter","filter","ContactsForm","dispatch","useDispatch","useSelector","type","className","css","onSubmit","e","preventDefault","form","target","name","elements","value","number","map","contact","includes","Notiflix","nameAlreadyInContacts","addContact","reset","htmlFor","id","placeholder","title","required","ContactsFilter","onChange","currentTarget","toUpperCase","setFilter","ContactsList","useEffect","fetchContacts","length","filteredContacts","toLocaleUpperCase","trim","onClick","deleteContact","Contacts"],"sourceRoot":""}